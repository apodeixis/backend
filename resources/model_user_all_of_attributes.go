/*
Apodeixis backend

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAllOfAttributes{}

// UserAllOfAttributes struct for UserAllOfAttributes
type UserAllOfAttributes struct {
	AuthorId       int32   `json:"author_id"`
	Email          string  `json:"email"`
	Name           string  `json:"name"`
	EmailVerified  bool    `json:"email_verified"`
	Oauth2User     bool    `json:"oauth2_user"`
	Oauth2Provider *string `json:"oauth2_provider,omitempty"`
	CreatedAt      int64   `json:"created_at"`
	UpdatedAt      int64   `json:"updated_at"`
}

type _UserAllOfAttributes UserAllOfAttributes

// NewUserAllOfAttributes instantiates a new UserAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAllOfAttributes(authorId int32, email string, name string, emailVerified bool, oauth2User bool, createdAt int64, updatedAt int64) *UserAllOfAttributes {
	this := UserAllOfAttributes{}
	this.AuthorId = authorId
	this.Email = email
	this.Name = name
	this.EmailVerified = emailVerified
	this.Oauth2User = oauth2User
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserAllOfAttributesWithDefaults instantiates a new UserAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAllOfAttributesWithDefaults() *UserAllOfAttributes {
	this := UserAllOfAttributes{}
	return &this
}

// GetAuthorId returns the AuthorId field value
func (o *UserAllOfAttributes) GetAuthorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetAuthorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorId, true
}

// SetAuthorId sets field value
func (o *UserAllOfAttributes) SetAuthorId(v int32) {
	o.AuthorId = v
}

// GetEmail returns the Email field value
func (o *UserAllOfAttributes) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserAllOfAttributes) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *UserAllOfAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserAllOfAttributes) SetName(v string) {
	o.Name = v
}

// GetEmailVerified returns the EmailVerified field value
func (o *UserAllOfAttributes) GetEmailVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailVerified, true
}

// SetEmailVerified sets field value
func (o *UserAllOfAttributes) SetEmailVerified(v bool) {
	o.EmailVerified = v
}

// GetOauth2User returns the Oauth2User field value
func (o *UserAllOfAttributes) GetOauth2User() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Oauth2User
}

// GetOauth2UserOk returns a tuple with the Oauth2User field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetOauth2UserOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Oauth2User, true
}

// SetOauth2User sets field value
func (o *UserAllOfAttributes) SetOauth2User(v bool) {
	o.Oauth2User = v
}

// GetOauth2Provider returns the Oauth2Provider field value if set, zero value otherwise.
func (o *UserAllOfAttributes) GetOauth2Provider() string {
	if o == nil || IsNil(o.Oauth2Provider) {
		var ret string
		return ret
	}
	return *o.Oauth2Provider
}

// GetOauth2ProviderOk returns a tuple with the Oauth2Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetOauth2ProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Oauth2Provider) {
		return nil, false
	}
	return o.Oauth2Provider, true
}

// HasOauth2Provider returns a boolean if a field has been set.
func (o *UserAllOfAttributes) HasOauth2Provider() bool {
	if o != nil && !IsNil(o.Oauth2Provider) {
		return true
	}

	return false
}

// SetOauth2Provider gets a reference to the given string and assigns it to the Oauth2Provider field.
func (o *UserAllOfAttributes) SetOauth2Provider(v string) {
	o.Oauth2Provider = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserAllOfAttributes) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserAllOfAttributes) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UserAllOfAttributes) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UserAllOfAttributes) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UserAllOfAttributes) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

func (o UserAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["author_id"] = o.AuthorId
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	toSerialize["email_verified"] = o.EmailVerified
	toSerialize["oauth2_user"] = o.Oauth2User
	if !IsNil(o.Oauth2Provider) {
		toSerialize["oauth2_provider"] = o.Oauth2Provider
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *UserAllOfAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"author_id",
		"email",
		"name",
		"email_verified",
		"oauth2_user",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserAllOfAttributes := _UserAllOfAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserAllOfAttributes)

	if err != nil {
		return err
	}

	*o = UserAllOfAttributes(varUserAllOfAttributes)

	return err
}

type NullableUserAllOfAttributes struct {
	value *UserAllOfAttributes
	isSet bool
}

func (v NullableUserAllOfAttributes) Get() *UserAllOfAttributes {
	return v.value
}

func (v *NullableUserAllOfAttributes) Set(val *UserAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAllOfAttributes(val *UserAllOfAttributes) *NullableUserAllOfAttributes {
	return &NullableUserAllOfAttributes{value: val, isSet: true}
}

func (v NullableUserAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
